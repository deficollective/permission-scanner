{
    "0x0cEC1A9154Ff802e7934Fc916Ed7Ca50bDE6844e": {
        "Pool": {
            "Contract_Name": "Pool",
            "Functions": [
                {
                    "Function": "setMinter",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "require(bool,string)(msg.sender == minter,Pool::setMinter: only the minter can change the minter address)"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "minter"
                    ]
                },
                {
                    "Function": "mint",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "require(bool,string)(msg.sender == minter,Pool::mint: only the minter can mint)"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "numCheckpoints",
                        "balances",
                        "totalSupply",
                        "mintingAllowedAfter",
                        "checkpoints"
                    ]
                }
            ]
        },
        "SafeMath": {
            "Contract_Name": "SafeMath",
            "Functions": []
        },
        "Timelock": {
            "Contract_Name": "Timelock",
            "Functions": [
                {
                    "Function": "setDelay",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "require(bool,string)(msg.sender == address(this),Timelock::setDelay: Call must come from Timelock.)"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "delay"
                    ]
                },
                {
                    "Function": "acceptAdmin",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "require(bool,string)(msg.sender == pendingAdmin,Timelock::acceptAdmin: Call must come from pendingAdmin.)"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "admin",
                        "pendingAdmin"
                    ]
                },
                {
                    "Function": "setPendingAdmin",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "require(bool,string)(msg.sender == address(this),Timelock::setPendingAdmin: Call must come from Timelock.)"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "pendingAdmin"
                    ]
                },
                {
                    "Function": "queueTransaction",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "require(bool,string)(msg.sender == admin,Timelock::queueTransaction: Call must come from admin.)"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "queuedTransactions"
                    ]
                },
                {
                    "Function": "cancelTransaction",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "require(bool,string)(msg.sender == admin,Timelock::cancelTransaction: Call must come from admin.)"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "queuedTransactions"
                    ]
                },
                {
                    "Function": "executeTransaction",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "require(bool,string)(msg.sender == admin,Timelock::executeTransaction: Call must come from admin.)"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "queuedTransactions"
                    ]
                }
            ]
        },
        "TreasuryVester": {
            "Contract_Name": "TreasuryVester",
            "Functions": [
                {
                    "Function": "setRecipient",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "require(bool,string)(msg.sender == recipient,TreasuryVester::setRecipient: unauthorized)"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "recipient"
                    ]
                }
            ]
        },
        "IERC20": {
            "Contract_Name": "IERC20",
            "Functions": []
        },
        "Nolock": {
            "Contract_Name": "Nolock",
            "Functions": [
                {
                    "Function": "setDelay",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "require(bool,string)(msg.sender == address(this),Timelock::setDelay: Call must come from Timelock.)"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "delay"
                    ]
                },
                {
                    "Function": "acceptAdmin",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "require(bool,string)(msg.sender == pendingAdmin,Timelock::acceptAdmin: Call must come from pendingAdmin.)"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "admin",
                        "pendingAdmin"
                    ]
                },
                {
                    "Function": "setPendingAdmin",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "require(bool,string)(msg.sender == address(this),Timelock::setPendingAdmin: Call must come from Timelock.)"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "pendingAdmin"
                    ]
                },
                {
                    "Function": "queueTransaction",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "require(bool,string)(msg.sender == admin,Timelock::queueTransaction: Call must come from admin.)"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "queuedTransactions"
                    ]
                },
                {
                    "Function": "cancelTransaction",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "require(bool,string)(msg.sender == admin,Timelock::cancelTransaction: Call must come from admin.)"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "queuedTransactions"
                    ]
                },
                {
                    "Function": "executeTransaction",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "require(bool,string)(msg.sender == admin,Timelock::executeTransaction: Call must come from admin.)"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "queuedTransactions"
                    ]
                }
            ]
        }
    },
    "0x9eE31E845fF1358Bf6B1F914d3918c6223c75573": {
        "IERC4626": {
            "Contract_Name": "IERC4626",
            "Functions": []
        },
        "IERC5267": {
            "Contract_Name": "IERC5267",
            "Functions": []
        },
        "ERC20": {
            "Contract_Name": "ERC20",
            "Functions": []
        },
        "IERC20": {
            "Contract_Name": "IERC20",
            "Functions": []
        },
        "ERC20Permit": {
            "Contract_Name": "ERC20Permit",
            "Functions": []
        },
        "IERC20Metadata": {
            "Contract_Name": "IERC20Metadata",
            "Functions": []
        },
        "IERC20Permit": {
            "Contract_Name": "IERC20Permit",
            "Functions": []
        },
        "SafeERC20": {
            "Contract_Name": "SafeERC20",
            "Functions": []
        },
        "Address": {
            "Contract_Name": "Address",
            "Functions": []
        },
        "Context": {
            "Contract_Name": "Context",
            "Functions": []
        },
        "Counters": {
            "Contract_Name": "Counters",
            "Functions": []
        },
        "ShortStrings": {
            "Contract_Name": "ShortStrings",
            "Functions": []
        },
        "StorageSlot": {
            "Contract_Name": "StorageSlot",
            "Functions": []
        },
        "Strings": {
            "Contract_Name": "Strings",
            "Functions": []
        },
        "ECDSA": {
            "Contract_Name": "ECDSA",
            "Functions": []
        },
        "EIP712": {
            "Contract_Name": "EIP712",
            "Functions": []
        },
        "Math": {
            "Contract_Name": "Math",
            "Functions": []
        },
        "SafeCast": {
            "Contract_Name": "SafeCast",
            "Functions": []
        },
        "SignedMath": {
            "Contract_Name": "SignedMath",
            "Functions": []
        },
        "UniformRandomNumber": {
            "Contract_Name": "UniformRandomNumber",
            "Functions": []
        },
        "PrizePool": {
            "Contract_Name": "PrizePool",
            "Functions": [
                {
                    "Function": "setDrawManager",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "msg.sender != creator"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "drawManager"
                    ]
                },
                {
                    "Function": "allocateRewardFromReserve",
                    "Modifiers": [
                        "notShutdown",
                        "onlyDrawManager"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != drawManager",
                        "msg.sender != drawManager"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "drawManager",
                        "drawId",
                        "block.timestamp",
                        "twabShutdownAt",
                        "firstDrawOpensAt",
                        "drawTimeoutAt_",
                        "drawPeriodSeconds",
                        "drawTimeout",
                        "twabController",
                        "_lastAwardedDrawId"
                    ],
                    "state_variables_written": [
                        "_reserve",
                        "_totalRewardsToBeClaimed",
                        "_rewards"
                    ]
                },
                {
                    "Function": "awardDraw",
                    "Modifiers": [
                        "notShutdown",
                        "onlyDrawManager"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != drawManager",
                        "msg.sender != drawManager"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "drawManager",
                        "drawId",
                        "block.timestamp",
                        "twabShutdownAt",
                        "firstDrawOpensAt",
                        "drawTimeoutAt_",
                        "drawPeriodSeconds",
                        "drawTimeout",
                        "twabController",
                        "_lastAwardedDrawId"
                    ],
                    "state_variables_written": [
                        "numberOfTiers",
                        "_tiers",
                        "_reserve",
                        "prizeTokenPerShare",
                        "claimCount",
                        "_winningRandomNumber",
                        "lastAwardedDrawAwardedAt",
                        "_lastAwardedDrawId"
                    ]
                },
                {
                    "Function": "claimPrize",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "! isWinner(msg.sender,_winner,_tier,_prizeIndex)",
                        "_claimedPrizes[msg.sender][_winner][lastAwardedDrawId_][_tier][_prizeIndex]"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "_totalWithdrawn",
                        "_claimedPrizes",
                        "_reserve",
                        "claimCount",
                        "_totalRewardsToBeClaimed",
                        "_tiers",
                        "_rewards"
                    ]
                },
                {
                    "Function": "contributeReserve",
                    "Modifiers": [
                        "notShutdown"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "drawId",
                        "block.timestamp",
                        "twabShutdownAt",
                        "firstDrawOpensAt",
                        "drawTimeoutAt_",
                        "drawPeriodSeconds",
                        "drawTimeout",
                        "twabController",
                        "_lastAwardedDrawId"
                    ],
                    "state_variables_written": [
                        "_directlyContributedReserve",
                        "_reserve"
                    ]
                }
            ]
        },
        "TieredLiquidityDistributor": {
            "Contract_Name": "TieredLiquidityDistributor",
            "Functions": []
        },
        "DrawAccumulatorLib": {
            "Contract_Name": "DrawAccumulatorLib",
            "Functions": []
        },
        "TierCalculationLib": {
            "Contract_Name": "TierCalculationLib",
            "Functions": []
        },
        "ILiquidationSource": {
            "Contract_Name": "ILiquidationSource",
            "Functions": []
        },
        "RingBufferLib": {
            "Contract_Name": "RingBufferLib",
            "Functions": []
        },
        "TwabController": {
            "Contract_Name": "TwabController",
            "Functions": [
                {
                    "Function": "getBalanceAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "_timestamp",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "period",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "_period",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTotalSupplyAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "_timestamp",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "period",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "_period",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "_timestamp",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "period",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "_period",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTotalSupplyTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "_timestamp",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "period",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "_period",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                }
            ]
        },
        "ObservationLib": {
            "Contract_Name": "ObservationLib",
            "Functions": []
        },
        "TwabLib": {
            "Contract_Name": "TwabLib",
            "Functions": [
                {
                    "Function": "getBalanceAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "_timestamp",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "period",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "_period",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "_timestamp",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "period",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "_period",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                }
            ]
        },
        "Ownable": {
            "Contract_Name": "Ownable",
            "Functions": [
                {
                    "Function": "renounceOwnership",
                    "Modifiers": [
                        "onlyOwner"
                    ],
                    "msg.sender_conditions": [
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)",
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "_owner"
                    ],
                    "state_variables_written": [
                        "_owner"
                    ]
                },
                {
                    "Function": "transferOwnership",
                    "Modifiers": [
                        "onlyOwner"
                    ],
                    "msg.sender_conditions": [
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)",
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "_owner"
                    ],
                    "state_variables_written": [
                        "_pendingOwner"
                    ]
                },
                {
                    "Function": "claimOwnership",
                    "Modifiers": [
                        "onlyPendingOwner"
                    ],
                    "msg.sender_conditions": [
                        "require(bool,string)(msg.sender == _pendingOwner,Ownable/caller-not-pendingOwner)",
                        "require(bool,string)(msg.sender == _pendingOwner,Ownable/caller-not-pendingOwner)"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "_pendingOwner"
                    ],
                    "state_variables_written": [
                        "_pendingOwner",
                        "_owner"
                    ]
                }
            ]
        },
        "IClaimable": {
            "Contract_Name": "IClaimable",
            "Functions": []
        },
        "PrizeVault": {
            "Contract_Name": "PrizeVault",
            "Functions": [
                {
                    "Function": "renounceOwnership",
                    "Modifiers": [
                        "onlyOwner"
                    ],
                    "msg.sender_conditions": [
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)",
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "_owner"
                    ],
                    "state_variables_written": [
                        "_owner"
                    ]
                },
                {
                    "Function": "transferOwnership",
                    "Modifiers": [
                        "onlyOwner"
                    ],
                    "msg.sender_conditions": [
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)",
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "_owner"
                    ],
                    "state_variables_written": [
                        "_pendingOwner"
                    ]
                },
                {
                    "Function": "claimOwnership",
                    "Modifiers": [
                        "onlyPendingOwner"
                    ],
                    "msg.sender_conditions": [
                        "require(bool,string)(msg.sender == _pendingOwner,Ownable/caller-not-pendingOwner)",
                        "require(bool,string)(msg.sender == _pendingOwner,Ownable/caller-not-pendingOwner)"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "_pendingOwner"
                    ],
                    "state_variables_written": [
                        "_pendingOwner",
                        "_owner"
                    ]
                },
                {
                    "Function": "claimPrize",
                    "Modifiers": [
                        "onlyClaimer"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != claimer",
                        "msg.sender != claimer"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "claimer",
                        "msg.sender"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "depositWithPermit",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "_owner != msg.sender"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": []
                },
                {
                    "Function": "claimYieldFeeShares",
                    "Modifiers": [
                        "onlyYieldFeeRecipient"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != yieldFeeRecipient",
                        "msg.sender != yieldFeeRecipient"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "yieldFeeRecipient",
                        "msg.sender"
                    ],
                    "state_variables_written": [
                        "yieldFeeBalance"
                    ]
                },
                {
                    "Function": "transferTokensOut",
                    "Modifiers": [
                        "onlyLiquidationPair"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != liquidationPair",
                        "msg.sender != liquidationPair"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "liquidationPair",
                        "msg.sender"
                    ],
                    "state_variables_written": [
                        "yieldFeeBalance"
                    ]
                },
                {
                    "Function": "verifyTokensIn",
                    "Modifiers": [
                        "onlyLiquidationPair"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != liquidationPair",
                        "msg.sender != liquidationPair"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "liquidationPair",
                        "msg.sender"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "setClaimer",
                    "Modifiers": [
                        "onlyOwner"
                    ],
                    "msg.sender_conditions": [
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)",
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "_owner"
                    ],
                    "state_variables_written": [
                        "claimer"
                    ]
                },
                {
                    "Function": "setLiquidationPair",
                    "Modifiers": [
                        "onlyOwner"
                    ],
                    "msg.sender_conditions": [
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)",
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "_owner"
                    ],
                    "state_variables_written": [
                        "liquidationPair"
                    ]
                },
                {
                    "Function": "setYieldFeePercentage",
                    "Modifiers": [
                        "onlyOwner"
                    ],
                    "msg.sender_conditions": [
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)",
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "_owner"
                    ],
                    "state_variables_written": [
                        "yieldFeePercentage"
                    ]
                },
                {
                    "Function": "setYieldFeeRecipient",
                    "Modifiers": [
                        "onlyOwner"
                    ],
                    "msg.sender_conditions": [
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)",
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "_owner"
                    ],
                    "state_variables_written": [
                        "yieldFeeRecipient"
                    ]
                }
            ],
            "storage_values": {
                "_lastAwardedDrawId": 0,
                "drawManager": "0x0000000000000000000000000000000000000000",
                "claimer": "0x98CC81798954c35c39b960DfcA3d8b170154aa7e",
                "_owner": "0x0000000000000000000000000000000000000000",
                "_pendingOwner": "0x0000000000000000000000000000000000000000",
                "yieldFeeRecipient": "0x0000000000000000000000000000000000000000",
                "liquidationPair": "0x0000000000000000000000000000000000000000"
            }
        },
        "TwabERC20": {
            "Contract_Name": "TwabERC20",
            "Functions": []
        },
        "Claimable": {
            "Contract_Name": "Claimable",
            "Functions": [
                {
                    "Function": "claimPrize",
                    "Modifiers": [
                        "onlyClaimer"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != claimer",
                        "msg.sender != claimer"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "claimer",
                        "msg.sender"
                    ],
                    "state_variables_written": []
                }
            ]
        },
        "HookManager": {
            "Contract_Name": "HookManager",
            "Functions": []
        },
        "IPrizeHooks": {
            "Contract_Name": "IPrizeHooks",
            "Functions": []
        }
    },
    "0xf93329e78feff1145fce03a79d5b356588dea215": {
        "IERC20": {
            "Contract_Name": "IERC20",
            "Functions": []
        },
        "IERC20Permit": {
            "Contract_Name": "IERC20Permit",
            "Functions": []
        },
        "SafeERC20": {
            "Contract_Name": "SafeERC20",
            "Functions": []
        },
        "Address": {
            "Contract_Name": "Address",
            "Functions": []
        },
        "SafeCast": {
            "Contract_Name": "SafeCast",
            "Functions": []
        },
        "DrawManager": {
            "Contract_Name": "DrawManager",
            "Functions": []
        },
        "IRng": {
            "Contract_Name": "IRng",
            "Functions": []
        },
        "RewardLib": {
            "Contract_Name": "RewardLib",
            "Functions": []
        },
        "UniformRandomNumber": {
            "Contract_Name": "UniformRandomNumber",
            "Functions": []
        },
        "PrizePool": {
            "Contract_Name": "PrizePool",
            "Functions": [
                {
                    "Function": "setDrawManager",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "msg.sender != creator"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "drawManager"
                    ]
                },
                {
                    "Function": "allocateRewardFromReserve",
                    "Modifiers": [
                        "notShutdown",
                        "onlyDrawManager"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != drawManager",
                        "msg.sender != drawManager"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "drawManager",
                        "msg.sender",
                        "block.timestamp",
                        "drawTimeout",
                        "drawTimeoutAt_",
                        "firstDrawOpensAt",
                        "drawId",
                        "_lastAwardedDrawId",
                        "drawPeriodSeconds",
                        "twabController",
                        "twabShutdownAt"
                    ],
                    "state_variables_written": [
                        "_rewards",
                        "_reserve",
                        "_totalRewardsToBeClaimed"
                    ]
                },
                {
                    "Function": "awardDraw",
                    "Modifiers": [
                        "notShutdown",
                        "onlyDrawManager"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != drawManager",
                        "msg.sender != drawManager"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "drawManager",
                        "msg.sender",
                        "block.timestamp",
                        "drawTimeout",
                        "drawTimeoutAt_",
                        "firstDrawOpensAt",
                        "drawId",
                        "_lastAwardedDrawId",
                        "drawPeriodSeconds",
                        "twabController",
                        "twabShutdownAt"
                    ],
                    "state_variables_written": [
                        "_reserve",
                        "prizeTokenPerShare",
                        "lastAwardedDrawAwardedAt",
                        "claimCount",
                        "_tiers",
                        "_winningRandomNumber",
                        "_lastAwardedDrawId",
                        "numberOfTiers"
                    ]
                },
                {
                    "Function": "claimPrize",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "! isWinner(msg.sender,_winner,_tier,_prizeIndex)",
                        "_claimedPrizes[msg.sender][_winner][lastAwardedDrawId_][_tier][_prizeIndex]"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "_rewards",
                        "_totalWithdrawn",
                        "_reserve",
                        "_claimedPrizes",
                        "claimCount",
                        "_tiers",
                        "_totalRewardsToBeClaimed"
                    ]
                },
                {
                    "Function": "contributeReserve",
                    "Modifiers": [
                        "notShutdown"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "drawTimeout",
                        "drawTimeoutAt_",
                        "firstDrawOpensAt",
                        "drawId",
                        "_lastAwardedDrawId",
                        "drawPeriodSeconds",
                        "twabController",
                        "twabShutdownAt"
                    ],
                    "state_variables_written": [
                        "_directlyContributedReserve",
                        "_reserve"
                    ]
                }
            ]
        },
        "TieredLiquidityDistributor": {
            "Contract_Name": "TieredLiquidityDistributor",
            "Functions": []
        },
        "DrawAccumulatorLib": {
            "Contract_Name": "DrawAccumulatorLib",
            "Functions": []
        },
        "TierCalculationLib": {
            "Contract_Name": "TierCalculationLib",
            "Functions": []
        },
        "WitnetOracle": {
            "Contract_Name": "WitnetOracle",
            "Functions": []
        },
        "WitnetRequestBytecodes": {
            "Contract_Name": "WitnetRequestBytecodes",
            "Functions": []
        },
        "WitnetRequestFactory": {
            "Contract_Name": "WitnetRequestFactory",
            "Functions": []
        },
        "IWitnetOracle": {
            "Contract_Name": "IWitnetOracle",
            "Functions": []
        },
        "IWitnetOracleEvents": {
            "Contract_Name": "IWitnetOracleEvents",
            "Functions": []
        },
        "IWitnetRandomness": {
            "Contract_Name": "IWitnetRandomness",
            "Functions": []
        },
        "IWitnetRequestBytecodes": {
            "Contract_Name": "IWitnetRequestBytecodes",
            "Functions": []
        },
        "IWitnetRequestFactory": {
            "Contract_Name": "IWitnetRequestFactory",
            "Functions": []
        },
        "Witnet": {
            "Contract_Name": "Witnet",
            "Functions": [
                {
                    "Function": "toWitnetResult",
                    "Modifiers": [
                        "notEmpty",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "buffer",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "asAddress",
                    "Modifiers": [
                        "_isReady",
                        "isMajorType",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "result",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "cbor",
                        "expected",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "asBool",
                    "Modifiers": [
                        "_isReady",
                        "isMajorType"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "result",
                        "cbor",
                        "expected"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "asBytes",
                    "Modifiers": [
                        "_isReady",
                        "isMajorType",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "result",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "cbor",
                        "expected",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "asBytes4",
                    "Modifiers": [
                        "_isReady",
                        "isMajorType",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "result",
                        "index",
                        "_range",
                        "result",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "cbor",
                        "expected",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "asBytes32",
                    "Modifiers": [
                        "_isReady",
                        "isMajorType",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "result",
                        "index",
                        "_range",
                        "result",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "cbor",
                        "expected",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "asCborValue",
                    "Modifiers": [
                        "_isReady"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "result"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "asCborArray",
                    "Modifiers": [
                        "_isReady",
                        "isMajorType",
                        "notEmpty",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "result",
                        "buffer",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "cbor",
                        "expected",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "cbor",
                        "expected"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "asFixed16",
                    "Modifiers": [
                        "_isReady",
                        "isMajorType",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "result",
                        "index",
                        "_range",
                        "cbor",
                        "expected"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "asFixed16Array",
                    "Modifiers": [
                        "_isReady",
                        "isMajorType",
                        "notEmpty",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "result",
                        "index",
                        "_range",
                        "cbor",
                        "expected",
                        "buffer",
                        "index",
                        "_range",
                        "cbor",
                        "expected",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "asInt",
                    "Modifiers": [
                        "_isReady",
                        "isMajorType",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "result",
                        "cbor",
                        "expected",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "asIntArray",
                    "Modifiers": [
                        "_isReady",
                        "isMajorType",
                        "notEmpty",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "result",
                        "cbor",
                        "expected",
                        "buffer",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "cbor",
                        "expected",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "asText",
                    "Modifiers": [
                        "_isReady",
                        "isMajorType",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "result",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "cbor",
                        "expected",
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "asTextArray",
                    "Modifiers": [
                        "_isReady",
                        "isMajorType",
                        "notEmpty",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "result",
                        "cbor",
                        "expected",
                        "index",
                        "_range",
                        "buffer",
                        "index",
                        "_range",
                        "cbor",
                        "expected",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "asUint",
                    "Modifiers": [
                        "_isReady",
                        "isMajorType",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "result",
                        "index",
                        "_range",
                        "cbor",
                        "expected",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "asUintArray",
                    "Modifiers": [
                        "isMajorType",
                        "notEmpty",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "cbor",
                        "expected",
                        "buffer",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "cbor",
                        "expected"
                    ],
                    "state_variables_written": []
                }
            ]
        },
        "WitnetBuffer": {
            "Contract_Name": "WitnetBuffer",
            "Functions": [
                {
                    "Function": "mutate",
                    "Modifiers": [
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "next",
                    "Modifiers": [
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "peek",
                    "Modifiers": [
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "peek",
                    "Modifiers": [
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "read",
                    "Modifiers": [
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "readFloat16",
                    "Modifiers": [
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "readFloat32",
                    "Modifiers": [
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "readFloat64",
                    "Modifiers": [
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "readText",
                    "Modifiers": [
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "readUint8",
                    "Modifiers": [
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "readUint16",
                    "Modifiers": [
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "readUint32",
                    "Modifiers": [
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "readUint64",
                    "Modifiers": [
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "readUint128",
                    "Modifiers": [
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "readUint256",
                    "Modifiers": [
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "seek",
                    "Modifiers": [
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "seek",
                    "Modifiers": [
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                }
            ]
        },
        "WitnetCBOR": {
            "Contract_Name": "WitnetCBOR",
            "Functions": [
                {
                    "Function": "fromBytes",
                    "Modifiers": [
                        "notEmpty",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "buffer",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "fromBuffer",
                    "Modifiers": [
                        "notEmpty",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "buffer",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "settle",
                    "Modifiers": [
                        "notEmpty",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "buffer",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "skip",
                    "Modifiers": [
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "readArray",
                    "Modifiers": [
                        "isMajorType",
                        "notEmpty",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "cbor",
                        "expected",
                        "buffer",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "cbor",
                        "expected",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "cbor",
                        "expected"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "readMap",
                    "Modifiers": [
                        "isMajorType",
                        "notEmpty",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "cbor",
                        "expected",
                        "buffer",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "cbor",
                        "expected",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "cbor",
                        "expected"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "readLength",
                    "Modifiers": [
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "readBool",
                    "Modifiers": [
                        "isMajorType"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "cbor",
                        "expected"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "readBytes",
                    "Modifiers": [
                        "isMajorType",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "cbor",
                        "expected",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "readFloat16",
                    "Modifiers": [
                        "isMajorType",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "cbor",
                        "expected",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "readFloat32",
                    "Modifiers": [
                        "isMajorType",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "cbor",
                        "expected",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "readFloat64",
                    "Modifiers": [
                        "isMajorType",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "cbor",
                        "expected",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "readFloat16Array",
                    "Modifiers": [
                        "isMajorType",
                        "notEmpty",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "cbor",
                        "expected",
                        "index",
                        "_range",
                        "cbor",
                        "expected",
                        "buffer",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "readInt",
                    "Modifiers": [
                        "isMajorType",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "cbor",
                        "expected",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "readIntArray",
                    "Modifiers": [
                        "isMajorType",
                        "notEmpty",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "cbor",
                        "expected",
                        "cbor",
                        "expected",
                        "buffer",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "readString",
                    "Modifiers": [
                        "isMajorType",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "cbor",
                        "expected",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "readStringArray",
                    "Modifiers": [
                        "isMajorType",
                        "notEmpty",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "cbor",
                        "expected",
                        "cbor",
                        "expected",
                        "index",
                        "_range",
                        "buffer",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "readUint",
                    "Modifiers": [
                        "isMajorType",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "cbor",
                        "expected",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "readUintArray",
                    "Modifiers": [
                        "isMajorType",
                        "notEmpty",
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "cbor",
                        "expected",
                        "cbor",
                        "expected",
                        "buffer",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "_readIndefiniteStringLength",
                    "Modifiers": [
                        "withinRange"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range",
                        "index",
                        "_range"
                    ],
                    "state_variables_written": []
                }
            ]
        },
        "WitnetV2": {
            "Contract_Name": "WitnetV2",
            "Functions": []
        },
        "Requestor": {
            "Contract_Name": "Requestor",
            "Functions": [
                {
                    "Function": "randomize",
                    "Modifiers": [
                        "onlyCreator"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != address(creator)",
                        "msg.sender != address(creator)"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "creator"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "withdraw",
                    "Modifiers": [
                        "onlyCreator"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != address(creator)",
                        "msg.sender != address(creator)"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "creator"
                    ],
                    "state_variables_written": []
                }
            ]
        },
        "RngWitnet": {
            "Contract_Name": "RngWitnet",
            "Functions": [
                {
                    "Function": "requestedAtBlock",
                    "Modifiers": [
                        "onlyValidRequest"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "requests",
                        "_requestId"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "isRequestComplete",
                    "Modifiers": [
                        "onlyValidRequest"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "requests",
                        "_requestId"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "isRequestFailed",
                    "Modifiers": [
                        "onlyValidRequest"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "requests",
                        "_requestId"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "randomNumber",
                    "Modifiers": [
                        "onlyValidRequest"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "requests",
                        "_requestId"
                    ],
                    "state_variables_written": []
                }
            ],
            "storage_values": {
                "_lastAwardedDrawId": 0,
                "drawManager": "0x0000000000000000000000000000000000000000",
                "requests": 0
            }
        },
        "RingBufferLib": {
            "Contract_Name": "RingBufferLib",
            "Functions": []
        },
        "TwabController": {
            "Contract_Name": "TwabController",
            "Functions": [
                {
                    "Function": "getBalanceAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "_period",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "period"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTotalSupplyAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "_period",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "period"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "_period",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "period"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTotalSupplyTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "_period",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "period"
                    ],
                    "state_variables_written": []
                }
            ]
        },
        "ObservationLib": {
            "Contract_Name": "ObservationLib",
            "Functions": []
        },
        "TwabLib": {
            "Contract_Name": "TwabLib",
            "Functions": [
                {
                    "Function": "getBalanceAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "_period",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "period"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "_period",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "period"
                    ],
                    "state_variables_written": []
                }
            ]
        }
    },
    "0x4d5f2cd31701f3e5de77b3f89ee7b80eb87b4acc": {
        "SafeCast": {
            "Contract_Name": "SafeCast",
            "Functions": []
        },
        "RingBufferLib": {
            "Contract_Name": "RingBufferLib",
            "Functions": []
        },
        "TwabController": {
            "Contract_Name": "TwabController",
            "Functions": [
                {
                    "Function": "getBalanceAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "_period",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "_timestamp",
                        "period",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "_timestamp",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTotalSupplyAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "_period",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "_timestamp",
                        "period",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "_timestamp",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "_period",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "_timestamp",
                        "period",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "_timestamp",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTotalSupplyTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "_period",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "_timestamp",
                        "period",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "_timestamp",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                }
            ]
        },
        "ObservationLib": {
            "Contract_Name": "ObservationLib",
            "Functions": []
        },
        "TwabLib": {
            "Contract_Name": "TwabLib",
            "Functions": [
                {
                    "Function": "getBalanceAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "_period",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "_timestamp",
                        "period",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "_timestamp",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "_period",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "_timestamp",
                        "period",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "_timestamp",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                }
            ]
        }
    },
    "0x2589ff8614f74704741ee3b51851b4ae812f1a21": {
        "IERC20": {
            "Contract_Name": "IERC20",
            "Functions": []
        },
        "IERC20Permit": {
            "Contract_Name": "IERC20Permit",
            "Functions": []
        },
        "SafeERC20": {
            "Contract_Name": "SafeERC20",
            "Functions": []
        },
        "Address": {
            "Contract_Name": "Address",
            "Functions": []
        },
        "Context": {
            "Contract_Name": "Context",
            "Functions": []
        },
        "Multicall": {
            "Contract_Name": "Multicall",
            "Functions": [
                {
                    "Function": "multicall",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "msg.sender == _msgSender()"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": []
                }
            ]
        },
        "SafeCast": {
            "Contract_Name": "SafeCast",
            "Functions": []
        },
        "RingBufferLib": {
            "Contract_Name": "RingBufferLib",
            "Functions": []
        },
        "TwabController": {
            "Contract_Name": "TwabController",
            "Functions": [
                {
                    "Function": "getBalanceAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "period",
                        "_timestamp",
                        "_period",
                        "overwritePeriodStartTime",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "_timestamp"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTotalSupplyAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "period",
                        "_timestamp",
                        "_period",
                        "overwritePeriodStartTime",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "_timestamp"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "period",
                        "_timestamp",
                        "_period",
                        "overwritePeriodStartTime",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "_timestamp"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTotalSupplyTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "period",
                        "_timestamp",
                        "_period",
                        "overwritePeriodStartTime",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "_timestamp"
                    ],
                    "state_variables_written": []
                }
            ]
        },
        "ObservationLib": {
            "Contract_Name": "ObservationLib",
            "Functions": []
        },
        "TwabLib": {
            "Contract_Name": "TwabLib",
            "Functions": [
                {
                    "Function": "getBalanceAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "period",
                        "_timestamp",
                        "_period",
                        "overwritePeriodStartTime",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "_timestamp"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "period",
                        "_timestamp",
                        "_period",
                        "overwritePeriodStartTime",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "_timestamp"
                    ],
                    "state_variables_written": []
                }
            ]
        },
        "TwabRewards": {
            "Contract_Name": "TwabRewards",
            "Functions": [
                {
                    "Function": "multicall",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "msg.sender == _msgSender()"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": []
                },
                {
                    "Function": "endPromotion",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "msg.sender != _promotion.creator"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "_promotions"
                    ]
                },
                {
                    "Function": "destroyPromotion",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "msg.sender != _promotion.creator"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "_promotions"
                    ]
                },
                {
                    "Function": "_requirePromotionCreator",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "msg.sender != _promotion.creator"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": []
                }
            ]
        },
        "ITwabRewards": {
            "Contract_Name": "ITwabRewards",
            "Functions": []
        }
    },
    "0xa99b3a8503260ab32753c382eac297acd4a43908": {
        "IERC20": {
            "Contract_Name": "IERC20",
            "Functions": []
        },
        "IFlashSwapCallback": {
            "Contract_Name": "IFlashSwapCallback",
            "Functions": []
        },
        "ILiquidationPair": {
            "Contract_Name": "ILiquidationPair",
            "Functions": []
        },
        "ILiquidationSource": {
            "Contract_Name": "ILiquidationSource",
            "Functions": []
        },
        "TpdaLiquidationPair": {
            "Contract_Name": "TpdaLiquidationPair",
            "Functions": []
        },
        "TpdaLiquidationPairFactory": {
            "Contract_Name": "TpdaLiquidationPairFactory",
            "Functions": []
        }
    },
    "0x7c210be12bcef8090610914189a0de43e2192ea0": {
        "IERC20": {
            "Contract_Name": "IERC20",
            "Functions": []
        },
        "IERC20Permit": {
            "Contract_Name": "IERC20Permit",
            "Functions": []
        },
        "SafeERC20": {
            "Contract_Name": "SafeERC20",
            "Functions": []
        },
        "Address": {
            "Contract_Name": "Address",
            "Functions": []
        },
        "IFlashSwapCallback": {
            "Contract_Name": "IFlashSwapCallback",
            "Functions": []
        },
        "ILiquidationPair": {
            "Contract_Name": "ILiquidationPair",
            "Functions": []
        },
        "ILiquidationSource": {
            "Contract_Name": "ILiquidationSource",
            "Functions": []
        },
        "TpdaLiquidationPair": {
            "Contract_Name": "TpdaLiquidationPair",
            "Functions": []
        },
        "TpdaLiquidationPairFactory": {
            "Contract_Name": "TpdaLiquidationPairFactory",
            "Functions": []
        },
        "TpdaLiquidationRouter": {
            "Contract_Name": "TpdaLiquidationRouter",
            "Functions": [
                {
                    "Function": "swapExactAmountOut",
                    "Modifiers": [
                        "onlyTrustedTpdaLiquidationPair"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "_liquidationPairFactory",
                        "_liquidationPair"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "flashSwapCallback",
                    "Modifiers": [
                        "onlySelf",
                        "onlyTrustedTpdaLiquidationPair"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "_liquidationPairFactory",
                        "_liquidationPair",
                        "this",
                        "_sender"
                    ],
                    "state_variables_written": []
                }
            ]
        }
    },
    "0xd499CcF3e93F4cfb335Ac388E3C896D59cdDe7c3": {
        "IERC4626": {
            "Contract_Name": "IERC4626",
            "Functions": []
        },
        "IERC5267": {
            "Contract_Name": "IERC5267",
            "Functions": []
        },
        "ERC20": {
            "Contract_Name": "ERC20",
            "Functions": []
        },
        "IERC20": {
            "Contract_Name": "IERC20",
            "Functions": []
        },
        "ERC20Permit": {
            "Contract_Name": "ERC20Permit",
            "Functions": []
        },
        "ERC4626": {
            "Contract_Name": "ERC4626",
            "Functions": []
        },
        "IERC20Metadata": {
            "Contract_Name": "IERC20Metadata",
            "Functions": []
        },
        "IERC20Permit": {
            "Contract_Name": "IERC20Permit",
            "Functions": []
        },
        "SafeERC20": {
            "Contract_Name": "SafeERC20",
            "Functions": []
        },
        "Address": {
            "Contract_Name": "Address",
            "Functions": []
        },
        "Context": {
            "Contract_Name": "Context",
            "Functions": []
        },
        "Counters": {
            "Contract_Name": "Counters",
            "Functions": []
        },
        "ShortStrings": {
            "Contract_Name": "ShortStrings",
            "Functions": []
        },
        "StorageSlot": {
            "Contract_Name": "StorageSlot",
            "Functions": []
        },
        "Strings": {
            "Contract_Name": "Strings",
            "Functions": []
        },
        "ECDSA": {
            "Contract_Name": "ECDSA",
            "Functions": []
        },
        "EIP712": {
            "Contract_Name": "EIP712",
            "Functions": []
        },
        "Math": {
            "Contract_Name": "Math",
            "Functions": []
        },
        "SafeCast": {
            "Contract_Name": "SafeCast",
            "Functions": []
        },
        "SignedMath": {
            "Contract_Name": "SignedMath",
            "Functions": []
        },
        "IClaimable": {
            "Contract_Name": "IClaimable",
            "Functions": []
        },
        "Ownable": {
            "Contract_Name": "Ownable",
            "Functions": [
                {
                    "Function": "renounceOwnership",
                    "Modifiers": [
                        "onlyOwner"
                    ],
                    "msg.sender_conditions": [
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)",
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "_owner"
                    ],
                    "state_variables_written": [
                        "_owner"
                    ]
                },
                {
                    "Function": "transferOwnership",
                    "Modifiers": [
                        "onlyOwner"
                    ],
                    "msg.sender_conditions": [
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)",
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "_owner"
                    ],
                    "state_variables_written": [
                        "_pendingOwner"
                    ]
                },
                {
                    "Function": "claimOwnership",
                    "Modifiers": [
                        "onlyPendingOwner"
                    ],
                    "msg.sender_conditions": [
                        "require(bool,string)(msg.sender == _pendingOwner,Ownable/caller-not-pendingOwner)",
                        "require(bool,string)(msg.sender == _pendingOwner,Ownable/caller-not-pendingOwner)"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "_pendingOwner"
                    ],
                    "state_variables_written": [
                        "_owner",
                        "_pendingOwner"
                    ]
                }
            ]
        },
        "RingBufferLib": {
            "Contract_Name": "RingBufferLib",
            "Functions": []
        },
        "UniformRandomNumber": {
            "Contract_Name": "UniformRandomNumber",
            "Functions": []
        },
        "PrizePool": {
            "Contract_Name": "PrizePool",
            "Functions": [
                {
                    "Function": "setDrawManager",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "msg.sender != creator"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "drawManager"
                    ]
                },
                {
                    "Function": "allocateRewardFromReserve",
                    "Modifiers": [
                        "notShutdown",
                        "onlyDrawManager"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != drawManager",
                        "msg.sender != drawManager"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "drawManager",
                        "msg.sender",
                        "twabShutdownAt",
                        "block.timestamp",
                        "drawTimeout",
                        "twabController",
                        "drawId",
                        "drawTimeoutAt_",
                        "drawPeriodSeconds",
                        "drawId",
                        "_timestamp",
                        "_lastAwardedDrawId",
                        "firstDrawOpensAt",
                        "_firstDrawOpensAt"
                    ],
                    "state_variables_written": [
                        "_reserve",
                        "_rewards",
                        "_totalRewardsToBeClaimed"
                    ]
                },
                {
                    "Function": "awardDraw",
                    "Modifiers": [
                        "notShutdown",
                        "onlyDrawManager"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != drawManager",
                        "msg.sender != drawManager"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "drawManager",
                        "msg.sender",
                        "twabShutdownAt",
                        "block.timestamp",
                        "drawTimeout",
                        "twabController",
                        "drawId",
                        "drawTimeoutAt_",
                        "drawPeriodSeconds",
                        "drawId",
                        "_timestamp",
                        "_lastAwardedDrawId",
                        "firstDrawOpensAt",
                        "_firstDrawOpensAt"
                    ],
                    "state_variables_written": [
                        "prizeTokenPerShare",
                        "_reserve",
                        "_winningRandomNumber",
                        "lastAwardedDrawAwardedAt",
                        "claimCount",
                        "_lastAwardedDrawId",
                        "_tiers",
                        "numberOfTiers"
                    ]
                },
                {
                    "Function": "claimPrize",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "! isWinner(msg.sender,_winner,_tier,_prizeIndex)",
                        "_claimedPrizes[msg.sender][_winner][lastAwardedDrawId_][_tier][_prizeIndex]"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "_claimedPrizes",
                        "_totalRewardsToBeClaimed",
                        "_reserve",
                        "_rewards",
                        "claimCount",
                        "_tiers",
                        "_totalWithdrawn"
                    ]
                },
                {
                    "Function": "contributeReserve",
                    "Modifiers": [
                        "notShutdown"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "twabShutdownAt",
                        "block.timestamp",
                        "drawTimeout",
                        "twabController",
                        "drawId",
                        "drawTimeoutAt_",
                        "drawPeriodSeconds",
                        "drawId",
                        "_timestamp",
                        "_lastAwardedDrawId",
                        "firstDrawOpensAt",
                        "_firstDrawOpensAt"
                    ],
                    "state_variables_written": [
                        "_reserve",
                        "_directlyContributedReserve"
                    ]
                }
            ]
        },
        "TieredLiquidityDistributor": {
            "Contract_Name": "TieredLiquidityDistributor",
            "Functions": []
        },
        "DrawAccumulatorLib": {
            "Contract_Name": "DrawAccumulatorLib",
            "Functions": []
        },
        "TierCalculationLib": {
            "Contract_Name": "TierCalculationLib",
            "Functions": []
        },
        "ILiquidationSource": {
            "Contract_Name": "ILiquidationSource",
            "Functions": []
        },
        "TwabController": {
            "Contract_Name": "TwabController",
            "Functions": [
                {
                    "Function": "getBalanceAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "PERIOD_LENGTH",
                        "block.timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "_period",
                        "_timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "overwritePeriodStartTime",
                        "period",
                        "_timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTotalSupplyAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "PERIOD_LENGTH",
                        "block.timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "_period",
                        "_timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "overwritePeriodStartTime",
                        "period",
                        "_timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "PERIOD_LENGTH",
                        "block.timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "_period",
                        "_timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "overwritePeriodStartTime",
                        "period",
                        "_timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTotalSupplyTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "PERIOD_LENGTH",
                        "block.timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "_period",
                        "_timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "overwritePeriodStartTime",
                        "period",
                        "_timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET"
                    ],
                    "state_variables_written": []
                }
            ]
        },
        "ObservationLib": {
            "Contract_Name": "ObservationLib",
            "Functions": []
        },
        "TwabLib": {
            "Contract_Name": "TwabLib",
            "Functions": [
                {
                    "Function": "getBalanceAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "PERIOD_LENGTH",
                        "block.timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "_period",
                        "_timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "overwritePeriodStartTime",
                        "period",
                        "_timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "PERIOD_LENGTH",
                        "block.timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "_period",
                        "_timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "overwritePeriodStartTime",
                        "period",
                        "_timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET"
                    ],
                    "state_variables_written": []
                }
            ]
        },
        "ExcessivelySafeCall": {
            "Contract_Name": "ExcessivelySafeCall",
            "Functions": []
        },
        "PrizeVault": {
            "Contract_Name": "PrizeVault",
            "Functions": [
                {
                    "Function": "renounceOwnership",
                    "Modifiers": [
                        "onlyOwner"
                    ],
                    "msg.sender_conditions": [
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)",
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "_owner"
                    ],
                    "state_variables_written": [
                        "_owner"
                    ]
                },
                {
                    "Function": "transferOwnership",
                    "Modifiers": [
                        "onlyOwner"
                    ],
                    "msg.sender_conditions": [
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)",
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "_owner"
                    ],
                    "state_variables_written": [
                        "_pendingOwner"
                    ]
                },
                {
                    "Function": "claimOwnership",
                    "Modifiers": [
                        "onlyPendingOwner"
                    ],
                    "msg.sender_conditions": [
                        "require(bool,string)(msg.sender == _pendingOwner,Ownable/caller-not-pendingOwner)",
                        "require(bool,string)(msg.sender == _pendingOwner,Ownable/caller-not-pendingOwner)"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "_pendingOwner"
                    ],
                    "state_variables_written": [
                        "_owner",
                        "_pendingOwner"
                    ]
                },
                {
                    "Function": "claimPrize",
                    "Modifiers": [
                        "onlyClaimer"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != claimer",
                        "msg.sender != claimer"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "claimer"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "depositWithPermit",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "_owner != msg.sender"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": []
                },
                {
                    "Function": "claimYieldFeeShares",
                    "Modifiers": [
                        "onlyYieldFeeRecipient"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != yieldFeeRecipient",
                        "msg.sender != yieldFeeRecipient"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "yieldFeeRecipient",
                        "msg.sender"
                    ],
                    "state_variables_written": [
                        "yieldFeeBalance"
                    ]
                },
                {
                    "Function": "transferTokensOut",
                    "Modifiers": [
                        "onlyLiquidationPair"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != liquidationPair",
                        "msg.sender != liquidationPair"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "liquidationPair",
                        "msg.sender"
                    ],
                    "state_variables_written": [
                        "yieldFeeBalance"
                    ]
                },
                {
                    "Function": "verifyTokensIn",
                    "Modifiers": [
                        "onlyLiquidationPair"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != liquidationPair",
                        "msg.sender != liquidationPair"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "liquidationPair",
                        "msg.sender"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "setClaimer",
                    "Modifiers": [
                        "onlyOwner"
                    ],
                    "msg.sender_conditions": [
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)",
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "_owner"
                    ],
                    "state_variables_written": [
                        "claimer"
                    ]
                },
                {
                    "Function": "setLiquidationPair",
                    "Modifiers": [
                        "onlyOwner"
                    ],
                    "msg.sender_conditions": [
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)",
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "_owner"
                    ],
                    "state_variables_written": [
                        "liquidationPair"
                    ]
                },
                {
                    "Function": "setYieldFeePercentage",
                    "Modifiers": [
                        "onlyOwner"
                    ],
                    "msg.sender_conditions": [
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)",
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "_owner"
                    ],
                    "state_variables_written": [
                        "yieldFeePercentage"
                    ]
                },
                {
                    "Function": "setYieldFeeRecipient",
                    "Modifiers": [
                        "onlyOwner"
                    ],
                    "msg.sender_conditions": [
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)",
                        "require(bool,string)(owner() == msg.sender,Ownable/caller-not-owner)"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "_owner"
                    ],
                    "state_variables_written": [
                        "yieldFeeRecipient"
                    ]
                }
            ],
            "storage_values": {
                "_lastAwardedDrawId": 0,
                "drawManager": "0x0000000000000000000000000000000000000000",
                "claimer": "0x0000000000000000000000000000000000000000",
                "_owner": "0x0000000000000000000000000000000000000000",
                "_pendingOwner": "0x0000000000000000000000000000000000000000",
                "yieldFeeRecipient": "0x0000000000000000000000000000000000000000",
                "liquidationPair": "0x0000000000000000000000000000000000000000"
            }
        },
        "PrizeVaultFactory": {
            "Contract_Name": "PrizeVaultFactory",
            "Functions": []
        },
        "TwabERC20": {
            "Contract_Name": "TwabERC20",
            "Functions": []
        },
        "Claimable": {
            "Contract_Name": "Claimable",
            "Functions": [
                {
                    "Function": "claimPrize",
                    "Modifiers": [
                        "onlyClaimer"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != claimer",
                        "msg.sender != claimer"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "claimer"
                    ],
                    "state_variables_written": []
                }
            ]
        },
        "HookManager": {
            "Contract_Name": "HookManager",
            "Functions": []
        },
        "IPrizeHooks": {
            "Contract_Name": "IPrizeHooks",
            "Functions": []
        }
    },
    "0x7865d01da4c9ba2f69b7879e6d2483ab6b354d95": {
        "IERC20": {
            "Contract_Name": "IERC20",
            "Functions": []
        },
        "IERC20Permit": {
            "Contract_Name": "IERC20Permit",
            "Functions": []
        },
        "SafeERC20": {
            "Contract_Name": "SafeERC20",
            "Functions": []
        },
        "Address": {
            "Contract_Name": "Address",
            "Functions": []
        },
        "SafeCast": {
            "Contract_Name": "SafeCast",
            "Functions": []
        },
        "UniformRandomNumber": {
            "Contract_Name": "UniformRandomNumber",
            "Functions": []
        },
        "PrizePool": {
            "Contract_Name": "PrizePool",
            "Functions": [
                {
                    "Function": "setDrawManager",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "msg.sender != creator"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "drawManager"
                    ]
                },
                {
                    "Function": "allocateRewardFromReserve",
                    "Modifiers": [
                        "notShutdown",
                        "onlyDrawManager"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != drawManager",
                        "msg.sender != drawManager"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "drawManager",
                        "block.timestamp",
                        "twabShutdownAt",
                        "drawPeriodSeconds",
                        "twabController",
                        "_lastAwardedDrawId",
                        "drawTimeoutAt_",
                        "drawTimeout",
                        "drawId",
                        "firstDrawOpensAt"
                    ],
                    "state_variables_written": [
                        "_totalRewardsToBeClaimed",
                        "_rewards",
                        "_reserve"
                    ]
                },
                {
                    "Function": "awardDraw",
                    "Modifiers": [
                        "notShutdown",
                        "onlyDrawManager"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != drawManager",
                        "msg.sender != drawManager"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "drawManager",
                        "block.timestamp",
                        "twabShutdownAt",
                        "drawPeriodSeconds",
                        "twabController",
                        "_lastAwardedDrawId",
                        "drawTimeoutAt_",
                        "drawTimeout",
                        "drawId",
                        "firstDrawOpensAt"
                    ],
                    "state_variables_written": [
                        "claimCount",
                        "lastAwardedDrawAwardedAt",
                        "_winningRandomNumber",
                        "_lastAwardedDrawId",
                        "_tiers",
                        "numberOfTiers",
                        "_reserve",
                        "prizeTokenPerShare"
                    ]
                },
                {
                    "Function": "claimPrize",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "! isWinner(msg.sender,_winner,_tier,_prizeIndex)",
                        "_claimedPrizes[msg.sender][_winner][lastAwardedDrawId_][_tier][_prizeIndex]"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "_claimedPrizes",
                        "claimCount",
                        "_totalRewardsToBeClaimed",
                        "_tiers",
                        "_rewards",
                        "_totalWithdrawn",
                        "_reserve"
                    ]
                },
                {
                    "Function": "contributeReserve",
                    "Modifiers": [
                        "notShutdown"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "twabShutdownAt",
                        "drawPeriodSeconds",
                        "twabController",
                        "_lastAwardedDrawId",
                        "drawTimeoutAt_",
                        "drawTimeout",
                        "drawId",
                        "firstDrawOpensAt"
                    ],
                    "state_variables_written": [
                        "_directlyContributedReserve",
                        "_reserve"
                    ]
                }
            ],
            "storage_values": {
                "_lastAwardedDrawId": 0,
                "drawManager": "0x0000000000000000000000000000000000000000"
            }
        },
        "TieredLiquidityDistributor": {
            "Contract_Name": "TieredLiquidityDistributor",
            "Functions": []
        },
        "DrawAccumulatorLib": {
            "Contract_Name": "DrawAccumulatorLib",
            "Functions": []
        },
        "TierCalculationLib": {
            "Contract_Name": "TierCalculationLib",
            "Functions": []
        },
        "RingBufferLib": {
            "Contract_Name": "RingBufferLib",
            "Functions": []
        },
        "TwabController": {
            "Contract_Name": "TwabController",
            "Functions": [
                {
                    "Function": "getBalanceAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "overwritePeriodStartTime",
                        "period",
                        "PERIOD_OFFSET",
                        "_period",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTotalSupplyAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "overwritePeriodStartTime",
                        "period",
                        "PERIOD_OFFSET",
                        "_period",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "overwritePeriodStartTime",
                        "period",
                        "PERIOD_OFFSET",
                        "_period",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTotalSupplyTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "overwritePeriodStartTime",
                        "period",
                        "PERIOD_OFFSET",
                        "_period",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                }
            ]
        },
        "ObservationLib": {
            "Contract_Name": "ObservationLib",
            "Functions": []
        },
        "TwabLib": {
            "Contract_Name": "TwabLib",
            "Functions": [
                {
                    "Function": "getBalanceAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "overwritePeriodStartTime",
                        "period",
                        "PERIOD_OFFSET",
                        "_period",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "overwritePeriodStartTime",
                        "period",
                        "PERIOD_OFFSET",
                        "_period",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                }
            ]
        }
    },
    "0xd84C4c7675e6Eb79eA28D04C001e702cCC679E80": {
        "ReentrancyGuard": {
            "Contract_Name": "ReentrancyGuard",
            "Functions": []
        },
        "IERC20": {
            "Contract_Name": "IERC20",
            "Functions": []
        },
        "IERC20Permit": {
            "Contract_Name": "IERC20Permit",
            "Functions": []
        },
        "SafeERC20": {
            "Contract_Name": "SafeERC20",
            "Functions": []
        },
        "Address": {
            "Contract_Name": "Address",
            "Functions": []
        },
        "SafeCast": {
            "Contract_Name": "SafeCast",
            "Functions": []
        },
        "IClaimable": {
            "Contract_Name": "IClaimable",
            "Functions": []
        },
        "Claimer": {
            "Contract_Name": "Claimer",
            "Functions": [
                {
                    "Function": "claimPrizes",
                    "Modifiers": [
                        "nonReentrant"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "_NOT_ENTERED",
                        "_ENTERED",
                        "_status"
                    ],
                    "state_variables_written": [
                        "_status"
                    ]
                }
            ]
        },
        "ClaimerFactory": {
            "Contract_Name": "ClaimerFactory",
            "Functions": []
        },
        "LinearVRGDALib": {
            "Contract_Name": "LinearVRGDALib",
            "Functions": []
        },
        "RingBufferLib": {
            "Contract_Name": "RingBufferLib",
            "Functions": []
        },
        "UniformRandomNumber": {
            "Contract_Name": "UniformRandomNumber",
            "Functions": []
        },
        "PrizePool": {
            "Contract_Name": "PrizePool",
            "Functions": [
                {
                    "Function": "setDrawManager",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "msg.sender != creator"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "drawManager"
                    ]
                },
                {
                    "Function": "allocateRewardFromReserve",
                    "Modifiers": [
                        "notShutdown",
                        "onlyDrawManager"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != drawManager",
                        "msg.sender != drawManager"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "drawManager",
                        "drawPeriodSeconds",
                        "_lastAwardedDrawId",
                        "block.timestamp",
                        "firstDrawOpensAt",
                        "twabController",
                        "twabShutdownAt",
                        "_timestamp",
                        "drawId",
                        "drawId",
                        "_firstDrawOpensAt",
                        "drawTimeout",
                        "drawTimeoutAt_"
                    ],
                    "state_variables_written": [
                        "_rewards",
                        "_reserve",
                        "_totalRewardsToBeClaimed"
                    ]
                },
                {
                    "Function": "awardDraw",
                    "Modifiers": [
                        "notShutdown",
                        "onlyDrawManager"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != drawManager",
                        "msg.sender != drawManager"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "drawManager",
                        "drawPeriodSeconds",
                        "_lastAwardedDrawId",
                        "block.timestamp",
                        "firstDrawOpensAt",
                        "twabController",
                        "twabShutdownAt",
                        "_timestamp",
                        "drawId",
                        "drawId",
                        "_firstDrawOpensAt",
                        "drawTimeout",
                        "drawTimeoutAt_"
                    ],
                    "state_variables_written": [
                        "_tiers",
                        "_lastAwardedDrawId",
                        "numberOfTiers",
                        "claimCount",
                        "_winningRandomNumber",
                        "_reserve",
                        "prizeTokenPerShare",
                        "lastAwardedDrawAwardedAt"
                    ]
                },
                {
                    "Function": "claimPrize",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "! isWinner(msg.sender,_winner,_tier,_prizeIndex)",
                        "_claimedPrizes[msg.sender][_winner][lastAwardedDrawId_][_tier][_prizeIndex]"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "_rewards",
                        "_tiers",
                        "_claimedPrizes",
                        "_totalWithdrawn",
                        "_totalRewardsToBeClaimed",
                        "claimCount",
                        "_reserve"
                    ]
                },
                {
                    "Function": "contributeReserve",
                    "Modifiers": [
                        "notShutdown"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "drawPeriodSeconds",
                        "_lastAwardedDrawId",
                        "block.timestamp",
                        "firstDrawOpensAt",
                        "twabController",
                        "twabShutdownAt",
                        "_timestamp",
                        "drawId",
                        "drawId",
                        "_firstDrawOpensAt",
                        "drawTimeout",
                        "drawTimeoutAt_"
                    ],
                    "state_variables_written": [
                        "_directlyContributedReserve",
                        "_reserve"
                    ]
                }
            ],
            "storage_values": {
                "_status": 1,
                "_lastAwardedDrawId": 0,
                "drawManager": "0x0000000000000000000000000000000000000000"
            }
        },
        "TieredLiquidityDistributor": {
            "Contract_Name": "TieredLiquidityDistributor",
            "Functions": []
        },
        "DrawAccumulatorLib": {
            "Contract_Name": "DrawAccumulatorLib",
            "Functions": []
        },
        "TierCalculationLib": {
            "Contract_Name": "TierCalculationLib",
            "Functions": []
        },
        "TwabController": {
            "Contract_Name": "TwabController",
            "Functions": [
                {
                    "Function": "getBalanceAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "_period",
                        "period",
                        "_timestamp",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTotalSupplyAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "_period",
                        "period",
                        "_timestamp",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "_period",
                        "period",
                        "_timestamp",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTotalSupplyTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "_period",
                        "period",
                        "_timestamp",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                }
            ]
        },
        "ObservationLib": {
            "Contract_Name": "ObservationLib",
            "Functions": []
        },
        "TwabLib": {
            "Contract_Name": "TwabLib",
            "Functions": [
                {
                    "Function": "getBalanceAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "_period",
                        "period",
                        "_timestamp",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "_period",
                        "period",
                        "_timestamp",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                }
            ]
        }
    },
    "0x54aa02cbc223Fc834949FB1fd8C855e4dA126c7D": {
        "ReentrancyGuard": {
            "Contract_Name": "ReentrancyGuard",
            "Functions": []
        },
        "IERC20": {
            "Contract_Name": "IERC20",
            "Functions": []
        },
        "IERC20Permit": {
            "Contract_Name": "IERC20Permit",
            "Functions": []
        },
        "SafeERC20": {
            "Contract_Name": "SafeERC20",
            "Functions": []
        },
        "Address": {
            "Contract_Name": "Address",
            "Functions": []
        },
        "SafeCast": {
            "Contract_Name": "SafeCast",
            "Functions": []
        },
        "IClaimable": {
            "Contract_Name": "IClaimable",
            "Functions": []
        },
        "Claimer": {
            "Contract_Name": "Claimer",
            "Functions": [
                {
                    "Function": "claimPrizes",
                    "Modifiers": [
                        "nonReentrant"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "_status",
                        "_NOT_ENTERED",
                        "_ENTERED"
                    ],
                    "state_variables_written": [
                        "_status"
                    ]
                }
            ]
        },
        "LinearVRGDALib": {
            "Contract_Name": "LinearVRGDALib",
            "Functions": []
        },
        "RingBufferLib": {
            "Contract_Name": "RingBufferLib",
            "Functions": []
        },
        "UniformRandomNumber": {
            "Contract_Name": "UniformRandomNumber",
            "Functions": []
        },
        "PrizePool": {
            "Contract_Name": "PrizePool",
            "Functions": [
                {
                    "Function": "setDrawManager",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "msg.sender != creator"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "drawManager"
                    ]
                },
                {
                    "Function": "allocateRewardFromReserve",
                    "Modifiers": [
                        "notShutdown",
                        "onlyDrawManager"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != drawManager",
                        "msg.sender != drawManager"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "drawManager",
                        "block.timestamp",
                        "_lastAwardedDrawId",
                        "_firstDrawOpensAt",
                        "_timestamp",
                        "drawId",
                        "twabShutdownAt",
                        "drawTimeoutAt_",
                        "twabController",
                        "firstDrawOpensAt",
                        "drawTimeout",
                        "drawPeriodSeconds",
                        "drawId"
                    ],
                    "state_variables_written": [
                        "_totalRewardsToBeClaimed",
                        "_reserve",
                        "_rewards"
                    ]
                },
                {
                    "Function": "awardDraw",
                    "Modifiers": [
                        "notShutdown",
                        "onlyDrawManager"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != drawManager",
                        "msg.sender != drawManager"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "msg.sender",
                        "drawManager",
                        "block.timestamp",
                        "_lastAwardedDrawId",
                        "_firstDrawOpensAt",
                        "_timestamp",
                        "drawId",
                        "twabShutdownAt",
                        "drawTimeoutAt_",
                        "twabController",
                        "firstDrawOpensAt",
                        "drawTimeout",
                        "drawPeriodSeconds",
                        "drawId"
                    ],
                    "state_variables_written": [
                        "claimCount",
                        "_tiers",
                        "_lastAwardedDrawId",
                        "numberOfTiers",
                        "_reserve",
                        "prizeTokenPerShare",
                        "_winningRandomNumber",
                        "lastAwardedDrawAwardedAt"
                    ]
                },
                {
                    "Function": "claimPrize",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "! isWinner(msg.sender,_winner,_tier,_prizeIndex)",
                        "_claimedPrizes[msg.sender][_winner][lastAwardedDrawId_][_tier][_prizeIndex]"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "_totalWithdrawn",
                        "_tiers",
                        "_claimedPrizes",
                        "_totalRewardsToBeClaimed",
                        "_rewards",
                        "_reserve",
                        "claimCount"
                    ]
                },
                {
                    "Function": "contributeReserve",
                    "Modifiers": [
                        "notShutdown"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "_lastAwardedDrawId",
                        "_firstDrawOpensAt",
                        "_timestamp",
                        "drawId",
                        "twabShutdownAt",
                        "drawTimeoutAt_",
                        "twabController",
                        "firstDrawOpensAt",
                        "drawTimeout",
                        "drawPeriodSeconds",
                        "drawId"
                    ],
                    "state_variables_written": [
                        "_directlyContributedReserve",
                        "_reserve"
                    ]
                }
            ],
            "storage_values": {
                "_status": 1,
                "_lastAwardedDrawId": 0,
                "drawManager": "0x0000000000000000000000000000000000000000"
            }
        },
        "TieredLiquidityDistributor": {
            "Contract_Name": "TieredLiquidityDistributor",
            "Functions": []
        },
        "DrawAccumulatorLib": {
            "Contract_Name": "DrawAccumulatorLib",
            "Functions": []
        },
        "TierCalculationLib": {
            "Contract_Name": "TierCalculationLib",
            "Functions": []
        },
        "TwabController": {
            "Contract_Name": "TwabController",
            "Functions": [
                {
                    "Function": "getBalanceAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "_timestamp",
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "_period",
                        "_timestamp",
                        "period",
                        "overwritePeriodStartTime",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTotalSupplyAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "_timestamp",
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "_period",
                        "_timestamp",
                        "period",
                        "overwritePeriodStartTime",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "_timestamp",
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "_period",
                        "_timestamp",
                        "period",
                        "overwritePeriodStartTime",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTotalSupplyTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "_timestamp",
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "_period",
                        "_timestamp",
                        "period",
                        "overwritePeriodStartTime",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                }
            ]
        },
        "ObservationLib": {
            "Contract_Name": "ObservationLib",
            "Functions": []
        },
        "TwabLib": {
            "Contract_Name": "TwabLib",
            "Functions": [
                {
                    "Function": "getBalanceAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "_timestamp",
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "_period",
                        "_timestamp",
                        "period",
                        "overwritePeriodStartTime",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "_timestamp",
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "_period",
                        "_timestamp",
                        "period",
                        "overwritePeriodStartTime",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                }
            ]
        }
    },
    "0x68a100a3729fc04ab26fb4c0862df22ceec2f18b": {
        "IERC4626": {
            "Contract_Name": "IERC4626",
            "Functions": []
        },
        "IERC20Errors": {
            "Contract_Name": "IERC20Errors",
            "Functions": []
        },
        "IERC721Errors": {
            "Contract_Name": "IERC721Errors",
            "Functions": []
        },
        "IERC1155Errors": {
            "Contract_Name": "IERC1155Errors",
            "Functions": []
        },
        "ERC20": {
            "Contract_Name": "ERC20",
            "Functions": []
        },
        "IERC20": {
            "Contract_Name": "IERC20",
            "Functions": []
        },
        "ERC4626": {
            "Contract_Name": "ERC4626",
            "Functions": []
        },
        "IERC20Metadata": {
            "Contract_Name": "IERC20Metadata",
            "Functions": []
        },
        "IERC20Permit": {
            "Contract_Name": "IERC20Permit",
            "Functions": []
        },
        "SafeERC20": {
            "Contract_Name": "SafeERC20",
            "Functions": []
        },
        "Address": {
            "Contract_Name": "Address",
            "Functions": []
        },
        "Context": {
            "Contract_Name": "Context",
            "Functions": []
        },
        "Math": {
            "Contract_Name": "Math",
            "Functions": []
        },
        "StakingVault": {
            "Contract_Name": "StakingVault",
            "Functions": []
        }
    },
    "0x98305eb9a29d45ec93ce44ba02b315b631c675a7": {
        "IERC20": {
            "Contract_Name": "IERC20",
            "Functions": []
        },
        "IERC20Permit": {
            "Contract_Name": "IERC20Permit",
            "Functions": []
        },
        "SafeERC20": {
            "Contract_Name": "SafeERC20",
            "Functions": []
        },
        "Address": {
            "Contract_Name": "Address",
            "Functions": []
        },
        "SafeCast": {
            "Contract_Name": "SafeCast",
            "Functions": []
        },
        "DrawManager": {
            "Contract_Name": "DrawManager",
            "Functions": []
        },
        "IRng": {
            "Contract_Name": "IRng",
            "Functions": []
        },
        "RewardLib": {
            "Contract_Name": "RewardLib",
            "Functions": []
        },
        "UniformRandomNumber": {
            "Contract_Name": "UniformRandomNumber",
            "Functions": []
        },
        "PrizePool": {
            "Contract_Name": "PrizePool",
            "Functions": [
                {
                    "Function": "setDrawManager",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "msg.sender != creator"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "drawManager"
                    ]
                },
                {
                    "Function": "allocateRewardFromReserve",
                    "Modifiers": [
                        "notShutdown",
                        "onlyDrawManager"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != drawManager",
                        "msg.sender != drawManager"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "drawManager",
                        "msg.sender",
                        "twabShutdownAt",
                        "firstDrawOpensAt",
                        "block.timestamp",
                        "drawTimeoutAt_",
                        "drawPeriodSeconds",
                        "twabController",
                        "drawTimeout",
                        "_lastAwardedDrawId",
                        "drawId"
                    ],
                    "state_variables_written": [
                        "_rewards",
                        "_reserve",
                        "_totalRewardsToBeClaimed"
                    ]
                },
                {
                    "Function": "awardDraw",
                    "Modifiers": [
                        "notShutdown",
                        "onlyDrawManager"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != drawManager",
                        "msg.sender != drawManager"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "drawManager",
                        "msg.sender",
                        "twabShutdownAt",
                        "firstDrawOpensAt",
                        "block.timestamp",
                        "drawTimeoutAt_",
                        "drawPeriodSeconds",
                        "twabController",
                        "drawTimeout",
                        "_lastAwardedDrawId",
                        "drawId"
                    ],
                    "state_variables_written": [
                        "_tiers",
                        "numberOfTiers",
                        "claimCount",
                        "lastAwardedDrawAwardedAt",
                        "_reserve",
                        "_winningRandomNumber",
                        "prizeTokenPerShare",
                        "_lastAwardedDrawId"
                    ]
                },
                {
                    "Function": "claimPrize",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "! isWinner(msg.sender,_winner,_tier,_prizeIndex)",
                        "_claimedPrizes[msg.sender][_winner][lastAwardedDrawId_][_tier][_prizeIndex]"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "_tiers",
                        "_claimedPrizes",
                        "claimCount",
                        "_reserve",
                        "_totalRewardsToBeClaimed",
                        "_rewards",
                        "_totalWithdrawn"
                    ]
                },
                {
                    "Function": "contributeReserve",
                    "Modifiers": [
                        "notShutdown"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "twabShutdownAt",
                        "firstDrawOpensAt",
                        "block.timestamp",
                        "drawTimeoutAt_",
                        "drawPeriodSeconds",
                        "twabController",
                        "drawTimeout",
                        "_lastAwardedDrawId",
                        "drawId"
                    ],
                    "state_variables_written": [
                        "_reserve",
                        "_directlyContributedReserve"
                    ]
                }
            ],
            "storage_values": {
                "_lastAwardedDrawId": 0,
                "drawManager": "0x0000000000000000000000000000000000000000"
            }
        },
        "TieredLiquidityDistributor": {
            "Contract_Name": "TieredLiquidityDistributor",
            "Functions": []
        },
        "DrawAccumulatorLib": {
            "Contract_Name": "DrawAccumulatorLib",
            "Functions": []
        },
        "TierCalculationLib": {
            "Contract_Name": "TierCalculationLib",
            "Functions": []
        },
        "RingBufferLib": {
            "Contract_Name": "RingBufferLib",
            "Functions": []
        },
        "TwabController": {
            "Contract_Name": "TwabController",
            "Functions": [
                {
                    "Function": "getBalanceAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "PERIOD_LENGTH",
                        "period",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "_period",
                        "_timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTotalSupplyAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "PERIOD_LENGTH",
                        "period",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "_period",
                        "_timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "PERIOD_LENGTH",
                        "period",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "_period",
                        "_timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTotalSupplyTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "PERIOD_LENGTH",
                        "period",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "_period",
                        "_timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                }
            ]
        },
        "ObservationLib": {
            "Contract_Name": "ObservationLib",
            "Functions": []
        },
        "TwabLib": {
            "Contract_Name": "TwabLib",
            "Functions": [
                {
                    "Function": "getBalanceAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "PERIOD_LENGTH",
                        "period",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "_period",
                        "_timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "PERIOD_OFFSET",
                        "block.timestamp",
                        "PERIOD_LENGTH",
                        "period",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "PERIOD_LENGTH",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "_period",
                        "_timestamp",
                        "PERIOD_OFFSET",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH"
                    ],
                    "state_variables_written": []
                }
            ]
        }
    },
    "0x36be31e7acd4b0d755bcc7858ef04848a3ec66c6": {
        "Ownable": {
            "Contract_Name": "Ownable",
            "Functions": [
                {
                    "Function": "renounceOwnership",
                    "Modifiers": [
                        "onlyOwner"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "_owner",
                        "msg.sender"
                    ],
                    "state_variables_written": [
                        "_owner"
                    ]
                },
                {
                    "Function": "transferOwnership",
                    "Modifiers": [
                        "onlyOwner"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "_owner",
                        "msg.sender"
                    ],
                    "state_variables_written": [
                        "_owner"
                    ]
                }
            ]
        },
        "IERC20": {
            "Contract_Name": "IERC20",
            "Functions": []
        },
        "IERC20Permit": {
            "Contract_Name": "IERC20Permit",
            "Functions": []
        },
        "SafeERC20": {
            "Contract_Name": "SafeERC20",
            "Functions": []
        },
        "Address": {
            "Contract_Name": "Address",
            "Functions": []
        },
        "Context": {
            "Contract_Name": "Context",
            "Functions": []
        },
        "SafeCast": {
            "Contract_Name": "SafeCast",
            "Functions": []
        },
        "UniformRandomNumber": {
            "Contract_Name": "UniformRandomNumber",
            "Functions": []
        },
        "PrizePool": {
            "Contract_Name": "PrizePool",
            "Functions": [
                {
                    "Function": "setDrawManager",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "msg.sender != creator"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "drawManager"
                    ]
                },
                {
                    "Function": "allocateRewardFromReserve",
                    "Modifiers": [
                        "notShutdown",
                        "onlyDrawManager"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != drawManager",
                        "msg.sender != drawManager"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "drawManager",
                        "msg.sender",
                        "block.timestamp",
                        "twabShutdownAt",
                        "drawPeriodSeconds",
                        "twabController",
                        "firstDrawOpensAt",
                        "_lastAwardedDrawId",
                        "drawTimeout",
                        "drawTimeoutAt_",
                        "drawId"
                    ],
                    "state_variables_written": [
                        "_reserve",
                        "_totalRewardsToBeClaimed",
                        "_rewards"
                    ]
                },
                {
                    "Function": "awardDraw",
                    "Modifiers": [
                        "notShutdown",
                        "onlyDrawManager"
                    ],
                    "msg.sender_conditions": [
                        "msg.sender != drawManager",
                        "msg.sender != drawManager"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "drawManager",
                        "msg.sender",
                        "block.timestamp",
                        "twabShutdownAt",
                        "drawPeriodSeconds",
                        "twabController",
                        "firstDrawOpensAt",
                        "_lastAwardedDrawId",
                        "drawTimeout",
                        "drawTimeoutAt_",
                        "drawId"
                    ],
                    "state_variables_written": [
                        "claimCount",
                        "_winningRandomNumber",
                        "numberOfTiers",
                        "_reserve",
                        "lastAwardedDrawAwardedAt",
                        "_lastAwardedDrawId",
                        "prizeTokenPerShare",
                        "_tiers"
                    ]
                },
                {
                    "Function": "claimPrize",
                    "Modifiers": [],
                    "msg.sender_conditions": [
                        "! isWinner(msg.sender,_winner,_tier,_prizeIndex)",
                        "_claimedPrizes[msg.sender][_winner][lastAwardedDrawId_][_tier][_prizeIndex]"
                    ],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "claimCount",
                        "_totalRewardsToBeClaimed",
                        "_reserve",
                        "_rewards",
                        "_totalWithdrawn",
                        "_tiers",
                        "_claimedPrizes"
                    ]
                },
                {
                    "Function": "contributeReserve",
                    "Modifiers": [
                        "notShutdown"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "twabShutdownAt",
                        "drawPeriodSeconds",
                        "twabController",
                        "firstDrawOpensAt",
                        "_lastAwardedDrawId",
                        "drawTimeout",
                        "drawTimeoutAt_",
                        "drawId"
                    ],
                    "state_variables_written": [
                        "_reserve",
                        "_directlyContributedReserve"
                    ]
                }
            ]
        },
        "TieredLiquidityDistributor": {
            "Contract_Name": "TieredLiquidityDistributor",
            "Functions": []
        },
        "DrawAccumulatorLib": {
            "Contract_Name": "DrawAccumulatorLib",
            "Functions": []
        },
        "TierCalculationLib": {
            "Contract_Name": "TierCalculationLib",
            "Functions": []
        },
        "ILiquidationSource": {
            "Contract_Name": "ILiquidationSource",
            "Functions": []
        },
        "RingBufferLib": {
            "Contract_Name": "RingBufferLib",
            "Functions": []
        },
        "TwabController": {
            "Contract_Name": "TwabController",
            "Functions": [
                {
                    "Function": "getBalanceAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "period",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "_period",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "_timestamp"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTotalSupplyAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "period",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "_period",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "_timestamp"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "period",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "_period",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "_timestamp"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTotalSupplyTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "period",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "_period",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "_timestamp"
                    ],
                    "state_variables_written": []
                }
            ]
        },
        "ObservationLib": {
            "Contract_Name": "ObservationLib",
            "Functions": []
        },
        "TwabLib": {
            "Contract_Name": "TwabLib",
            "Functions": [
                {
                    "Function": "getBalanceAt",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "period",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "_period",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "_timestamp"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "getTwabBetween",
                    "Modifiers": [
                        "requireFinalized"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "block.timestamp",
                        "PERIOD_OFFSET",
                        "period",
                        "PERIOD_LENGTH",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "_period",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "_timestamp",
                        "overwritePeriodStartTime",
                        "PERIOD_OFFSET",
                        "PERIOD_LENGTH",
                        "_timestamp"
                    ],
                    "state_variables_written": []
                }
            ]
        },
        "VaultBooster": {
            "Contract_Name": "VaultBooster",
            "Functions": [
                {
                    "Function": "renounceOwnership",
                    "Modifiers": [
                        "onlyOwner"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "_owner"
                    ]
                },
                {
                    "Function": "transferOwnership",
                    "Modifiers": [
                        "onlyOwner"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "_owner"
                    ]
                },
                {
                    "Function": "setBoost",
                    "Modifiers": [
                        "onlyOwner"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "_boosts"
                    ]
                },
                {
                    "Function": "deposit",
                    "Modifiers": [
                        "onlyBoosted"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "_token",
                        "_boosts"
                    ],
                    "state_variables_written": [
                        "_boosts"
                    ]
                },
                {
                    "Function": "withdraw",
                    "Modifiers": [
                        "onlyOwner"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [],
                    "state_variables_written": [
                        "_boosts"
                    ]
                },
                {
                    "Function": "transferTokensOut",
                    "Modifiers": [
                        "onlyLiquidationPair"
                    ],
                    "msg.sender_conditions": [
                        "_boosts[IERC20(_token)].liquidationPair != msg.sender",
                        "_boosts[IERC20(_token)].liquidationPair != msg.sender"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "_token",
                        "msg.sender",
                        "_boosts"
                    ],
                    "state_variables_written": [
                        "_boosts"
                    ]
                },
                {
                    "Function": "verifyTokensIn",
                    "Modifiers": [
                        "onlyLiquidationPair",
                        "onlyPrizeToken"
                    ],
                    "msg.sender_conditions": [
                        "_boosts[IERC20(_token)].liquidationPair != msg.sender",
                        "_boosts[IERC20(_token)].liquidationPair != msg.sender"
                    ],
                    "state_variables_read_inside_modifiers": [
                        "_tokenIn",
                        "prizePool",
                        "_token",
                        "msg.sender",
                        "_boosts"
                    ],
                    "state_variables_written": []
                },
                {
                    "Function": "targetOf",
                    "Modifiers": [
                        "onlyPrizeToken"
                    ],
                    "msg.sender_conditions": [],
                    "state_variables_read_inside_modifiers": [
                        "_tokenIn",
                        "prizePool"
                    ],
                    "state_variables_written": []
                }
            ],
            "storage_values": {
                "_lastAwardedDrawId": 0,
                "drawManager": "0x0000000000000000000000000000000000000000",
                "_owner": "0x0000000000000000000000000000000000000000",
                "_boosts": "0000000000000000000000000000000000000000000000000000000000000000"
            }
        },
        "VaultBoosterFactory": {
            "Contract_Name": "VaultBoosterFactory",
            "Functions": []
        }
    }
}